//* ### 1. –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

// - `createProduct(obj, callback)` - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂
//   –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
//   —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å `id` —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// - `logProduct(product)` - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤
//   –∫–æ–Ω—Å–æ–ª—å
// - `logTotalPrice(product)` - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î
//   –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

// function createProduct(obj, callback) {
//   callback(obj);
// }

// function logProduct(product) {
//   console.log(product);
// }

// function logTotalPrice(product) {
//   console.log(product.price * product.quantity);
// }

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);

//* ### 2. –í –æ–±'—î–∫—Ç–∞ `account` —î –º–µ—Ç–æ–¥–∏ `withdraw(amount, onSuccess, onError)` —Ç–∞ `deposit(amount, onSuccess, onError)`, –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.

//* ### –ú–µ—Ç–æ–¥ `withdraw` –≤–∏–∫–ª–∏–∫–∞—î `onError` —è–∫—â–æ amount –±—ñ–ª—å—à–µ `TRANSACTION_LIMIT` –∞–±–æ `this.balance`, —ñ `onSuccess` –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

//* ### –ú–µ—Ç–æ–¥ `deposit` –≤–∏–∫–ª–∏–∫–∞—î `onError` —è–∫—â–æ `amount` –±—ñ–ª—å—à–µ `TRANSACTION_LIMIT` –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ `onSuccess` –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: "Jacob",
//   balance: 1000,
//   withdraw(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT || amount > this.balance) {
//       onError(amount);
//       return;
//     }

//     this.balance -= amount;
//     onSuccess(amount);
//   },
//   deposit(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT || amount <= 0) {
//       onError(amount);
//       return;
//     }

//     this.balance += amount;
//     onSuccess(amount);
//   },
// };

// function handleSuccess(amount) {
//   console.log(`The ${amount} was successfully withdrawn from the balance`);
// }

// function handleError(amount) {
//   console.warn(
//     `${amount} - There are not enough funds or the amount exceeds the amount for one transaction `
//   );
// }

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);

//* ### 3. –°—Ç–≤–æ—Ä–∏ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é `logItems()`, —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å–≤ –∫–æ–Ω—Å–æ–ª—å –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤–∞, –∑—Ä–æ–±–∏ –ø–µ—Ä–µ–±—ñ—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É `forEach()`.

// const logItems = (products) =>
//   products.forEach((product) => console.log(product));

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

//* ### 4. –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é `each(array, callback)`, —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É. –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π `forEach()` –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤–∞

// function each(array, callback) {
//   const newArr = [];

//   array.forEach((value) => newArr.push(callback(value)));

//   return newArr;
// }

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value * 2;
//   })
// );
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value - 10;
//   })
// );
// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return Math.sqrt(value);
//   })
// );
// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.ceil(value);
//   })
// );
// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.floor(value);
//   })
// );

//* ## 5. –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é `groupBy()`, —è–∫–∞ –≥—Ä—É–ø—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –º–∞—Å–∏–≤—É –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –∑–≤–æ—Ä–æ—Ç–Ω–∏–º –≤–∏–∫–ª–∏–∫–æ–º, –∫–æ–ª–∏ –µ–ª–µ–º–µ–Ω—Ç —ñ–∑ –º–∞—Å–∏–≤—É –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.

const users = [
  {
    name: "John",
    yearOfBirth: 1988,
    placeOfBirth: "New York",
  },
  {
    name: "Nancy",
    yearOfBirth: 1963,
    placeOfBirth: "New York",
  },
  {
    name: "John",
    yearOfBirth: 1980,
    placeOfBirth: "Toronto",
  },
];

// function groupBy(users, callback) {
//   const sortedByPlace = {};
//   for (const user of users) {
//     sortedByPlace[callback(user)] = [];
//   }
//   users.forEach((user) => {
//     if (callback(user) === callback(user)) {
//       sortedByPlace[callback(user)].push(user);
//     }
//   });

//   return sortedByPlace;
// }

// function groupBy(users, callback) {
//   const sortedByPlace = {};
//   for (const user of users) {
//     const key = callback(user);
//     if (!sortedByPlace[key]) {
//       sortedByPlace[key] = [];
//     }
//     sortedByPlace[key].push(user);
//   }

//   return sortedByPlace;
// }

console.log(groupBy(users, (objectEl) => objectEl.placeOfBirth));

//–û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å–∞—Ç:
// {
//   ‚ùóÔ∏èNew York: [
//     {
//       name: 'John',
//       yearOfBirth: 1988,
//       placeOfBirth: 'New York',
//     },
//     {
//       name: 'Nancy',
//       yearOfBirth: 1963,
//       placeOfBirth: 'New York',
//     }
//   ],
//   ‚ùóÔ∏èToronto: [
//     {
//       name: 'John',
//       yearOfBirth: 1980,
//       placeOfBirth: 'Toronto',
//     }
//   ]
// }
